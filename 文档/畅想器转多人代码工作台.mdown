我开始考虑我的核心竞争力的问题
没错，多人平台这个项目太广了，多人做什么都可以，但我们不可能什么都去做，我们要找到核心的、独特的创意来使得我们的项目更具有竞争力。

多人联网绘图+语音聊天，这个想法倒是不错，但目前已经有了
可以考虑加上思维导图的绘制和图表的绘制
SVG的绘图库加进去怎么样？

文件共享，要采取更加独特的方式去实现，git的方式不错，采取这种共享机制，能使得别人无法在你改为之前签入新版。 
设立共享文件路径，使得联网文件传输变得更简单。

队员之间的通信也变得更加简单，语音通信，文本通信，一键邮件。

统一代码测试平台，将某人的计算机配置好各种库后，可以作为代码的测试机编译机使用。
但如何解决python这类脚本语音呢？

有办法了！多人Shell！
但这是不是有点像服务器管理员用shell远程登录去管理服务器的方法呢？

我们到底需要的是什么样的工作环境？是一键安装库，还是动态的去找库，如果是一键安装，各种语言已经大都有自己的包管理软件了。动态的去找库，又要考虑如何来描述功能。故有无相生，难易相成。。。

我们总是在想用一些开源库，用一些别人的东西，但我们自己的东西又在哪里，什么又是属于我们自己的真东西呢？我们就不能不用什么别人的库来实现下，我们自己来做这些事情。我们应该有自己的库管理器，资源管理器。

我们应该做的是大规模软件开发，利用我们现有的框架，把我们的功能集成到一起，从软件到服务，将整个系统做起来。

网站平台是半即时的，每个人的数据都放在一起，团队资源都整合后放在一起。每个人的动作都会在下一次刷新时被更新。

我们的平台是全即时的，每个人的行为会实时的反映给每个人。

抓住这两个平台的特性，才能做好整个系统

我们的程序是带有代码编写特色的，像是自己使用的qq，聊天中可以实现代码的高亮，
可以讨论代码的问题。可以在聊天对话框中写脚本，执行shell，支持markdown

我们应该考虑下到底该如何组织我们的代码，积累我们的代码库。
一种是建立大规模代码库，自动管理，注释自动生成文档
另一种是建立个人的代码库，采取自己的方式管理，而这种管理不再用繁琐的打开vs查看，而是有统一的索引，可以快速找到。
我们的库也是，难配置和难使用。不易将库链接进来。也不易查找。


我们的编程哲学：
组合性强
耦合性低
能自动则自动
统一胜过多变

